generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  password  String
  name      String
  projects  Project[]
  schedules Schedule[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("users")
}

model Project {
  id          String     @id @default(uuid())
  name        String
  description String?    @db.Text
  color       String     @db.VarChar(7)
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String     @map("user_id")
  schedules   Schedule[]
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")

  @@map("projects")
}

model Schedule {
  id          String    @id @default(uuid())
  title       String
  description String?   @db.Text
  startDate   DateTime  @map("start_date")
  endDate     DateTime  @map("end_date")
  status      Status    @default(PENDING)
  priority    Priority  @default(MEDIUM)
  project     Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)
  projectId   String?   @map("project_id")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("schedules")
}

enum Status {
  PENDING     @map("pending")
  IN_PROGRESS @map("in_progress")
  COMPLETED   @map("completed")
  CANCELLED   @map("cancelled")
}

enum Priority {
  LOW    @map("low")
  MEDIUM @map("medium")
  HIGH   @map("high")
}
